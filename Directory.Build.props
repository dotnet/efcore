<Project>
  <!-- Define project type conventions. -->
  <PropertyGroup>
    <IsTrimmingTestProject Condition="$(MSBuildProjectName.EndsWith('.TrimmingTests'))">true</IsTrimmingTestProject>
    <IsNativeAotTestProject Condition="$(MSBuildProjectName.EndsWith('.NativeAotTests'))">true</IsNativeAotTestProject>
    <IsPublishedAppTestProject Condition="'$(IsTrimmingTestProject)' == 'true' or '$(IsNativeAotTestProject)' == 'true'">true</IsPublishedAppTestProject>
    <IsSpecificationTestProject Condition="$(MSBuildProjectName.EndsWith('.Specification.Tests'))">true</IsSpecificationTestProject>
    <IsUnitTestProject Condition=" '$(IsUnitTestProject)' == '' AND
        '$(IsSpecificationTestProject)' != 'true' AND
        ( $(MSBuildProjectName.EndsWith('.Tests')) OR
          $(MSBuildProjectName.EndsWith('.FunctionalTests'))) ">true</IsUnitTestProject>
    <IsUnitTestProject Condition=" '$(IsUnitTestProject)' == '' ">false</IsUnitTestProject>
    <SolutionRoot>$(MSBuildThisFileDirectory)</SolutionRoot>
  </PropertyGroup>

  <PropertyGroup>
    <TargetOsName Condition=" '$(TargetOsName)' == '' AND $([MSBuild]::IsOSPlatform('Windows'))">win</TargetOsName>
    <TargetOsName Condition=" '$(TargetOsName)' == '' AND $([MSBuild]::IsOSPlatform('OSX'))">osx</TargetOsName>
    <TargetOsName Condition=" '$(TargetOsName)' == '' AND $([MSBuild]::IsOSPlatform('Linux'))">linux</TargetOsName>
    <TargetOsName Condition=" '$(TargetOsName)' == '' AND $([MSBuild]::IsOSPlatform('FreeBSD'))">freebsd</TargetOsName>
    <TargetArchitecture Condition="'$(TargetArchitecture)' == ''">x64</TargetArchitecture>
    <TargetRuntimeIdentifier Condition="'$(TargetRuntimeIdentifier)' == ''">$(TargetOsName)-$(TargetArchitecture)</TargetRuntimeIdentifier>
  </PropertyGroup>

  <Import Project="Sdk.props" Sdk="Microsoft.DotNet.Arcade.Sdk" />

  <Import
    Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), AspNetCoreSettings.props))\AspNetCoreSettings.props"
    Condition="'$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), AspNetCoreSettings.props))' != '' " />

  <PropertyGroup Condition="'$(CopyrightMicrosoft)' != ''">
    <Copyright>$(CopyrightMicrosoft)</Copyright>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
  </PropertyGroup>

  <PropertyGroup>
    <StrongNameKeyId>MicrosoftAspNetCore</StrongNameKeyId>
    <PackageTags>Entity Framework Core;entity-framework-core;EF;Data;O/RM;EntityFramework;EntityFrameworkCore;EFCore</PackageTags>
    <Product>Microsoft Entity Framework Core</Product>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <LangVersion>12.0</LangVersion>
    <Nullable>enable</Nullable>
    <DebugType>portable</DebugType>
    <PackageProjectUrl>https://docs.microsoft.com/ef/core/</PackageProjectUrl>
    <PackageIconFullPath>$(MSBuildThisFileDirectory)logo\ef-logo.png</PackageIconFullPath>
  </PropertyGroup>

  <PropertyGroup Condition="'$(DeveloperBuild)' == 'true'">
    <WarningsNotAsErrors>$(WarningsNotAsErrors);CS1591;SA1636</WarningsNotAsErrors>
  </PropertyGroup>

  <!-- HACK: Work around #15093 -->
  <PropertyGroup>
    <NoWarn>$(NoWarn.Replace(';1591', ''))</NoWarn>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="StyleCop.Analyzers" Version="1.1.118" PrivateAssets="All" />
  </ItemGroup>
  <ItemGroup>
    <AdditionalFiles Include="$(MSBuildThisFileDirectory)stylecop.json" />
  </ItemGroup>

  <Import Project="eng\testing\linker\trimmingTests.props" Condition="'$(IsPublishedAppTestProject)' == 'true'" />

</Project>
