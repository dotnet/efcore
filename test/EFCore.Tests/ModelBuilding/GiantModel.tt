<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#
    var NumberOfEntityTypes = 2000;
#>
// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.

using System.Collections.Generic;

// <auto-generated />
namespace Microsoft.EntityFrameworkCore.ModelBuilding
{
    public static class GiantModel
    {
        public class RelatedEntity1
        {
            public int Id { get; set; }

            public RelatedEntity<#=NumberOfEntityTypes#> ParentEntity { get; set; }

            public IEnumerable<RelatedEntity2> ChildEntities { get; set; }
        }

<#
	var currentEntityTypeNumber = 2;
	for(;currentEntityTypeNumber < NumberOfEntityTypes; currentEntityTypeNumber++ )
	{
#>
        public class RelatedEntity<#=currentEntityTypeNumber#>
        {
            public int Id { get; set; }

            public RelatedEntity<#=currentEntityTypeNumber - 1#> ParentEntity { get; set; }

            public IEnumerable<RelatedEntity<#=currentEntityTypeNumber + 1#>> ChildEntities { get; set; }
        }

<#
	}
#>
        public class RelatedEntity<#=currentEntityTypeNumber#>
        {
            public int Id { get; set; }

            public RelatedEntity<#=currentEntityTypeNumber - 1#> ParentEntity { get; set; }

            public IEnumerable<RelatedEntity1> ChildEntities { get; set; }
        }
    }
}