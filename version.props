<Project>
  <PropertyGroup>
    <MajorVersion>2</MajorVersion>
    <MinorVersion>1</MinorVersion>
    <PatchVersion>39</PatchVersion>
    <PreReleaseLabel>servicing</PreReleaseLabel>
    <OfficialBuildId Condition="'$(OfficialBuildId)' == ''">$(BUILD_BUILDNUMBER)</OfficialBuildId>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(OfficialBuildId)' != '' ">
    <!-- This implements core versioning. Spec: https://github.com/dotnet/arcade/blob/master/Documentation/CorePackages/Versioning.md -->
    <_BuildNumber>$(OfficialBuildId)</_BuildNumber>

    <!-- _BuildNumber from CI is assumed to have format "yyyyMMdd.r". -->
    <_BuildNumberYY>$(_BuildNumber.Substring(2, 2))</_BuildNumberYY>
    <_BuildNumberMM>$(_BuildNumber.Substring(4, 2))</_BuildNumberMM>
    <_BuildNumberDD>$(_BuildNumber.Substring(6, 2))</_BuildNumberDD>
    <_BuildNumberR>$(_BuildNumber.Substring(9))</_BuildNumberR>

    <!-- yy * 1000 + mm * 50 + dd -->
    <_BuildNumberShortDate>$([MSBuild]::Add($([MSBuild]::Add($([MSBuild]::Multiply($(_BuildNumberYY), 1000)), $([MSBuild]::Multiply($(_BuildNumberMM), 50)))), $(_BuildNumberDD)))</_BuildNumberShortDate>

     <VersionSuffixBuildOfTheDay>$([System.Convert]::ToInt32($(_BuildNumberR)))</VersionSuffixBuildOfTheDay>

     <_BuildNumberSuffix>$(_BuildNumberShortDate).$(VersionSuffixBuildOfTheDay)</_BuildNumberSuffix>
  </PropertyGroup>

  <!-- This is temporary until we finish https://github.com/aspnet/AspNetCore-Internal/issues/1338  -->
  <PropertyGroup Condition=" '$(TEAMCITY_VERSION)' != '' ">
    <_BuildNumberSuffix>$(BuildNumber)</_BuildNumberSuffix>
    <VersionSuffix>$(PreReleaseLabel)-$(_BuildNumberSuffix)</VersionSuffix>
  </PropertyGroup>

   <PropertyGroup>
    <_BuildNumberSuffix Condition=" '$(_BuildNumberSuffix)' == '' ">0</_BuildNumberSuffix>
    <VersionPrefix>$(MajorVersion).$(MinorVersion).$(PatchVersion)</VersionPrefix>
    <VersionSuffix Condition=" '$(VersionSuffix)' == '' ">$(PreReleaseLabel)-$(_BuildNumberSuffix)</VersionSuffix>

    <!-- Run the build with /p:IsFinalBuild=true to produce the product with 'final' branding and versioning -->
    <IsFinalBuild Condition=" '$(IsFinalBuild)' == '' ">false</IsFinalBuild>
    <IncludePreReleaseLabelInPackageVersion>true</IncludePreReleaseLabelInPackageVersion>
    <IncludePreReleaseLabelInPackageVersion Condition=" '$(IsFinalBuild)' == 'true' AND ('$(PreReleaseLabel)' == 'servicing' OR '$(PreReleaseLabel)' == 'rtm')">false</IncludePreReleaseLabelInPackageVersion>

    <!-- The version in files -->
    <PackageVersion>$(VersionPrefix)</PackageVersion>
    <PackageVersion Condition=" '$(IncludePreReleaseLabelInPackageVersion)' == 'true' ">$(VersionPrefix)-$(VersionSuffix)</PackageVersion>

    <ExperimentalVersionPrefix>0.1.$(PatchVersion)</ExperimentalVersionPrefix>
    <ExperimentalPackageVersion>$(ExperimentalVersionPrefix)</ExperimentalPackageVersion>
    <ExperimentalPackageVersion Condition=" '$(IncludePreReleaseLabelInPackageVersion)' == 'true' ">$(ExperimentalVersionPrefix)-$(VersionSuffix)</ExperimentalPackageVersion>
  </PropertyGroup>

  <!-- Run 'dotnet msbuild version.props' to test changes to this file. -->
  <Target Name="InspectVersionNumbers">
    <Message Importance="High" Text="PackageVersion   = '$(PackageVersion)'" />
    <Message Importance="High" Text="VersionPrefix    = '$(VersionPrefix)'" />
    <Message Importance="High" Text="VersionSuffix    = '$(VersionSuffix)'" />
  </Target>

</Project>
