<?xml version="1.0" encoding="utf-8"?>

<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">

    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="UninitializedDbSetWarningSuppressionJustification" xml:space="preserve">
    <value>DbSet properties on DbContext subclasses are automatically populated by the DbContext constructor.</value>
  </data>
  <data name="InternalUsageMessageFormat" xml:space="preserve">
    <value>{0} is an internal API that supports the Entity Framework Core infrastructure and not subject to the same compatibility standards as public APIs. It may be changed or removed without notice in any release.</value>
  </data>
  <data name="InternalUsageTitle" xml:space="preserve">
    <value>Internal EF Core API usage.</value>
  </data>
  <data name="InterpolatedStringUsageInRawQueriesAnalyzerTitle" xml:space="preserve">
    <value>Risk of vulnerability to SQL injection.</value>
  </data>
  <data name="InterpolatedStringUsageInRawQueriesCodeActionTitle" xml:space="preserve">
    <value>Use method which protects against SQL injection</value>
  </data>
  <data name="InterpolatedStringUsageInRawQueriesMessageFormat" xml:space="preserve">
    <value>Method '{0}' inserts interpolated strings directly into the SQL, without any protection against SQL injection. Consider using '{1}' instead, which protects against SQL injection, or make sure that the value is sanitized and suppress the warning.</value>
  </data>
</root>